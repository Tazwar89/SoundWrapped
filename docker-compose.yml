version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: soundwrapped-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-soundwrapped}
      POSTGRES_USER: ${POSTGRES_USER:-soundwrapped_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/soundwrapped-backend/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - soundwrapped-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-soundwrapped_user} -d ${POSTGRES_DB:-soundwrapped}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend
  backend:
    build:
      context: ./backend/soundwrapped-backend
      dockerfile: Dockerfile
    container_name: soundwrapped-backend
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-docker}
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-soundwrapped}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-soundwrapped_user}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-your_secure_password}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO:-update}
      SPRING_JPA_SHOW_SQL: ${SPRING_JPA_SHOW_SQL:-false}
      SOUNDCLOUD_CLIENT_ID: ${SOUNDCLOUD_CLIENT_ID}
      SOUNDCLOUD_CLIENT_SECRET: ${SOUNDCLOUD_CLIENT_SECRET}
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - soundwrapped-network
    volumes:
      - ./backend/soundwrapped-backend/logs:/app/logs

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: soundwrapped-frontend
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://backend:8081/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - soundwrapped-network

networks:
  soundwrapped-network:
    driver: bridge

volumes:
  postgres_data:
